<?php

namespace Sukaldaris\InfoBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * RecetaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecetaRepository extends EntityRepository
{

	public function getLatestRecetas($limit = null)
	{
		$qp = $this->createQueryBuilder('r')->select('r')->addOrderBy('r.fecha_publicacion', 'DESC');

		if (false === is_null($limit))
			$qp->setMaxResults($limit);

		return $qp->getQuery()->getResult();
	}

	public function getRecetasAlphabeticallyOrdered($currentPage)
	{
	
	    $qp = $this->createQueryBuilder('p')->select('p')->addOrderBy('p.titulo', 'ASC');

	   	$paginator = $this-> paginate($qp, $currentPage);

	   	return $paginator;

	}
	public function getRecetasForCategoria($idCategoria)
	{
			$query = $this->_em->createQueryBuilder('r');
			$query
			    ->select('r')
			    ->where('r.id_categoria = idCategoria')
			    ->setParameter("idCategoria", $idCategoria);
	
			return $query->getQuery()->getResult();
	}

	public function getRecetasForChef($idChef)
	{
			$query = $this->_em->createQueryBuilder('r');
			$query
			    ->select('r')
			    ->where('r.id_chef = idChef')
			    ->setParameter("idChef", $idChef);
	
			return $query->getQuery()->getResult();
	}

	public function paginate($dql,$page=1,$limit=20){
		$paginator = new Paginator($dql);

		$paginator->getQuery() ->setFirstResult($limit * ($page - 1)) ->setMaxResults($limit);

		return $paginator;
	}

	public function getRecetasLikePalabraClave($pc)
	{
		$query = $this->_em->createQueryBuilder('r');
		$query
		    ->select('r')
		    
		    ->leftJoin('r.palabras', 'p') // The missing join
		    ->where('p.palabra LIKE :pc') // where p.name like %keyword% 
		    ->setParameter('pc', '%'.$pc.'%')
		    ->orderBy('p.palabra', 'ASC') // order by p.name ASC
		    ->getQuery();

		return $query->getResult();
	}


}
